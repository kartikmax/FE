import { useEffect, useState } from "react"
import { Link, useNavigate } from "react-router-dom"
import axios from 'axios';
import { Button,FormControl,InputLabel,OutlinedInput,FormHelperText,Alert, Snackbar, TextField } from "@mui/material"

{{#each data}}
{{#ifnoteq name "Onload_Config"}}
import {{name}} from "./{{name}}"
{{/ifnoteq}}
{{/each}}

const {{name}} = () => {
  
  const [toast, setToast] = useState({ open: false, status: "", msg: "" })
  
  const [vars,setVars] = useState({})
  const [isLoading,setLoad] =useState(false)
  {{#each data}}
{{#ifeq name "Onload_Config"}}
{{#each components.[0].fields.[0].action.Actions}}
{{#ifeq type "ShowSection"}}
  const [section,setSection] = useState({ {{{objToString fields}}} })
{{/ifeq}}

{{#ifeq type "CallAPI"}}
 useEffect(() => {
axios.{{fields.type}}(import.meta.env.VITE_API +  '{{fields.route}}').then((res) => {
      {{#each Success}}
{{#ifeq type "setVar"}}
      setVars(res.data.data)
{{/ifeq}}
{{/each}}
      setLoad(true)
    }).catch(err => {
      setToast({ open: true, msg: err.response.data.error, status: "error" })

    }); 
  }, []);
{{/ifeq}}

{{/each}}
{{/ifeq}}
{{/each}}



 
  
  return (
  <>
    <Snackbar open={toast.open} autoHideDuration={6000} onClose={() => setToast((prev) => ({ ...prev, open: false }))}>
      <Alert onClose={() => setToast((prev) => ({ ...prev, open: false }))} severity={toast.status} sx={ { width: "100%" } }>
        {toast.msg}
      </Alert>
    </Snackbar>
  {{#each data }}
    {{#switch name}}
    {{#case "Onload_Config"}}
    { 
      
{{#each components.[0].fields.[0].action.Actions}}
{{#ifeq type "CallAPI"}}
isLoading &&
{{/ifeq}}
{{/each}}
<>
      {{/case}}
      {{#case "Header"}}
      <{{name}} vars={vars} setSection={setSection} />
        {{create components "./templates/sectionIndex.hbs" (concat @root.path name "/") "index.jsx" name}}
    {{/case}}
    {{#default}}
        {section.{{name}}State &&  <{{name}} vars={vars} setSection={setSection} />}
        {{create components "./templates/sectionIndex.hbs" (concat @root.path name "/") "index.jsx" name}}
    {{/default}}
    {{/switch}}
  {{/each}}
  </>
}
  </>
  )
}

export default {{name}}

